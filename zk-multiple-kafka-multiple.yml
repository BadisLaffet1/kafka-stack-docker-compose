version: '2.1'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    networks:
       - kafka_network

  zoo2:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo2
    container_name: zoo2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    networks:
       - kafka_network

  zoo3:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo3
    container_name: zoo3
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zoo1:2888:3888;zoo2:2888:3888;zoo3:2888:3888
    networks:
       - kafka_network

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME: EXTERNAL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 1
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
       - kafka_network

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://host.docker.internal:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME: EXTERNAL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 2
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
       - kafka_network

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME: EXTERNAL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183"
      KAFKA_BROKER_ID: 3
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
       - kafka_network

  kafdrop:
    image: obsidiandynamics/kafdrop:3.29.0
    container_name: kafdrop
    ports:
      - "9005:9005"  # Port to access the web UI
    environment:
      KAFKA_BROKERCONNECT: "host.docker.internal:9092,host.docker.internal:9093,host.docker.internal:9094"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
       - kafka_network

  zoonavigator:
    image: elkozmon/zoonavigator:latest
    container_name: zoonavigator
    ports:
      - "9001:9001"  # Changed port to avoid conflict with Kafdrop
    environment:
      HTTP_PORT: 9001
      ZOOKEEPER_SERVERS: "zoo1:2181,zoo2:2182,zoo3:2183"  # ZooKeeper connection string
    restart: unless-stopped
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    networks:
       - kafka_network
      # Confluent Schema Registry
  confluent-schema-registry:
    image: confluentinc/cp-schema-registry:3.2.1
    container_name: confluent-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zoo1:2181,zoo2:2182,zoo3:2183/kafka"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_HOST_NAME: "localhost"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    restart: always
    networks:
       - kafka_network

  # Kafka REST Proxy
  confluent-rest-proxy:
    image: confluentinc/cp-kafka-rest:3.2.1
    container_name: confluent-rest-proxy
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      KAFKA_REST_ZOOKEEPER_CONNECT: "zoo1:2181,zoo2:2182,zoo3:2183/kafka"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082/"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://localhost:8081/"
      KAFKA_REST_HOST_NAME: "localhost"
    depends_on:
      - confluent-schema-registry
      - kafka1
      - kafka2
      - kafka3
    restart: always
    networks:
       - kafka_network

  # Kafka Topics UI
  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.2
    container_name: kafka-topics-ui
    ports:
      - "8083:8083"
    environment:
      KAFKA_REST_PROXY_URL: "http://localhost:8082"
      PROXY: "TRUE"
    depends_on:
      - confluent-rest-proxy
    restart: always
    networks:
       - kafka_network

  # Kafka Manager
  kafka-manager:
    image: qnib/plain-kafka-manager
    container_name: kafka-manager
    ports:
      - "9000:9000"
    environment:
      ZOOKEEPER_HOSTS: "zoo1:2181,zoo2:2182,zoo3:2183"
      APPLICATION_SECRET: "change_me_please"
    restart: always
    networks:
       - kafka_network


networks:
  kafka_network:
    driver: bridge
